# Local SSL with Traefik - Adapts frappe_docker approach for self-signed certificates
# This overrides the standard deployment to add SSL support

version: '3.8'

services:
  # Add Traefik reverse proxy
  traefik:
    image: traefik:v2.11
    container_name: ${PROJECT_NAME:-mmp-local}-traefik-1
    restart: unless-stopped
    ports:
      - "${HTTPS_PUBLISH_PORT:-443}:443"
      - "${HTTP_PUBLISH_PORT:-80}:80"
      - "8080:8080"  # Traefik dashboard
    command:
      # API and dashboard
      - --api.dashboard=true
      - --api.insecure=true
      
      # Docker provider
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=${PROJECT_NAME:-mmp-local}_default
      
      # File provider for static certificates
      - --providers.file.filename=/etc/traefik/dynamic.yaml
      
      # Entry points
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      
      # HTTP to HTTPS redirect
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.web.http.redirections.entrypoint.permanent=true
      
      # Logging
      - --log.level=INFO
      - --accesslog=true
      
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./ssl-certs:/etc/ssl/certs:ro
      - ./traefik-dynamic.yaml:/etc/traefik/dynamic.yaml:ro
    networks:
      - default
    labels:
      - "traefik.enable=true"
      # Dashboard routing (optional)
      - "traefik.http.routers.dashboard.rule=Host(`traefik.${SITE_DOMAIN:-mmp.local}`)"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.service=api@internal"

  # Override frontend service to use Traefik
  frontend:
    ports: [] # Remove direct port exposure
    labels:
      - "traefik.enable=true"
      
      # HTTP router (will redirect to HTTPS)
      - "traefik.http.routers.${PROJECT_NAME:-mmp-local}-web.rule=Host(`${SITE_DOMAIN:-mmp.local}`)"
      - "traefik.http.routers.${PROJECT_NAME:-mmp-local}-web.entrypoints=web"
      - "traefik.http.routers.${PROJECT_NAME:-mmp-local}-web.middlewares=redirect-to-https"
      
      # HTTPS router  
      - "traefik.http.routers.${PROJECT_NAME:-mmp-local}-websecure.rule=Host(`${SITE_DOMAIN:-mmp.local}`)"
      - "traefik.http.routers.${PROJECT_NAME:-mmp-local}-websecure.entrypoints=websecure"
      - "traefik.http.routers.${PROJECT_NAME:-mmp-local}-websecure.tls=true"
      - "traefik.http.routers.${PROJECT_NAME:-mmp-local}-websecure.service=${PROJECT_NAME:-mmp-local}-service"
      
      # Service definition
      - "traefik.http.services.${PROJECT_NAME:-mmp-local}-service.loadbalancer.server.port=8080"
      
      # Middleware for redirect
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"

  # Add Grafana SSL support if it exists
  grafana:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana-websecure.rule=Host(`grafana.${SITE_DOMAIN:-mmp.local}`)"
      - "traefik.http.routers.grafana-websecure.entrypoints=websecure"
      - "traefik.http.routers.grafana-websecure.tls=true"
      - "traefik.http.services.grafana-service.loadbalancer.server.port=3000"
    ports: [] # Remove direct port exposure

networks:
  default:
    external: true
    name: ${PROJECT_NAME:-mmp-local}_default